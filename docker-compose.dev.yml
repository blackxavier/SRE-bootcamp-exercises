version: "3.8"

# web contianer that serves the django app
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: chiefbuilder/web
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000

    volumes:
      - static_volume:/home/app/staticfiles
    expose:
      - "8000"
    env_file:
      - ./env_files/app.env
    depends_on:
      - db
    networks:
      - my_custom_network

  nginx:
    build:
      context: nginx/
    image: chiefbuilder/ingress
    volumes:
      - static_volume:/home/app/staticfiles
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - my_custom_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1/healthcheck/"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: always
    ports:
      - "81:81"
      - "443:443"
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    networks:
      - my_custom_network

  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/

    env_file:
      - ./env_files/pg-db.env
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_custom_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_CONFIG_LOGIN_BANNER="Authorisedusers"
    env_file:
      - ./env_files/pg-admin.env
    ports:
      - "5050:80"
    restart: always
    networks:
      - my_custom_network

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9999:8080"
    networks:
      - my_custom_network

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - my_custom_network

volumes:
  postgres_data_prod:
  static_volume:
  portainer_data:
  npm_data:
  npm_letsencrypt:

networks:
  my_custom_network:
    driver: bridge
